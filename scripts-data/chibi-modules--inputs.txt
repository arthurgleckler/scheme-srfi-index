(srfi 0) - cond-expand
(srfi 1) - list library
(srfi 2) - and-let*
(srfi 6) - basic string ports
(srfi 8) - receive
(srfi 9) - define-record-type
(srfi 11) - let-values/let*-values
(srfi 14) - character-set library
(srfi 16) - case-lambda
(srfi 18) - multi-threading support
(srfi 22) - running scheme scripts on Unix
(srfi 23) - error reporting mechanism
(srfi 26) - cut/cute partial application
(srfi 27) - sources of random bits
(srfi 33) - bitwise operators
(srfi 38) - read/write shared structures
(srfi 39) - parameter objects
(srfi 41) - streams
(srfi 46) - basic syntax-rules extensions
(srfi 55) - require-extension
(srfi 62) - s-expression comments
(srfi 69) - basic hash tables
(srfi 95) - sorting and merging
(srfi 98) - environment access
(srfi 99) - ERR5RS records
(srfi 101) - purely functional random-access pairs and lists
(srfi 111) - boxes
(srfi 113) - sets and bags
(srfi 115) - Scheme regular expressions
(srfi 116) - immutable list library
(srfi 117) - mutable queues
(srfi 121) - generators
(srfi 124) - ephemerons
(srfi 125) - intermediate hash tables
(srfi 127) - lazy sequences
(srfi 128) - comparators (reduced)
(srfi 129) - titlecase procedures
(srfi 130) - cursor-based string library
(srfi 132) - sort libraries
(srfi 133) - vector library
(srfi 134) - immutable deques
(srfi 135) - immutable texts
(srfi 139) - syntax parameters
(srfi 141) - integer division
(srfi 142) - bitwise operations
(srfi 143) - fixnums
(srfi 144) - flonums
(srfi 145) - assumptions
(srfi 147) - custom macro transformers
(srfi 151) - bitwise operators
(srfi 154) - first-class dynamic extents
(srfi 159) - combinator formatting
